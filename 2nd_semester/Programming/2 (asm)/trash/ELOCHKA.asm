TITLE ELOCHKA
.MODEL SMALL	;Модель памяти ближнего типа
.DATA	;Открыть сегмент данных
	s1 DB 'HAPPY$'	;Первая строка
	s2 DB 'NEW$'	;Вторая строка
	s3 DB 'YEAR!$'	;Третья строка
.STACK 100h	;Отвести под стек 256 байт
.Code	;Открыть сегмент кодов
cursor PROC	;Начать процедуру с именем cursor
	mov AH, 02h	;Функция перемещения
	int 10h	;курсора
	ret	;Возврат из процедуры
cursor ENDP	;Закончить процедуру с именем cursor

print PROC	;Начать процедуру с именем print
	mov AH, 09h	;Функция вывода
	int 10h	;символа
	ret	;Возврат из процедуры
print ENDP	;Закончить процедуру с именем print

chgColor PROC	;Начать процедуру с именем chgColor
	mov AH, 06h	;Функция прокрутки вверх,
	mov AL, 01h	;задающая цвет фона и символов одной строки,
	mov DH, CH	;номер которой находится в регистре CH
	mov CL, 0	;Атрибуты хранятся
	mov DL, 79	;в регистре BH
	int 10h
	ret	;Возврат из процедуры
chgColor ENDP	;Закончить процедуру с именем chgColor

vertLine PROC	;Начать процедуру с именем vertLine
	mov CX, 01h	;Вывод по одному символу
	mov AL, 07h	;Символ "залитая точка"
M:
	call cursor	;Переместить курсор в заданные координаты
	call print	;Вывести символ
	inc DH	;Увеличить DH на единицу, для перехода к следующей строке
	cmp DH, 13h	;Сравнить DH с 19
	jl M	;Если DH меньше, перейти к метке M
	ret	;Возврат из процедуры
vertLine ENDP	;Закончить процедуру с именем vertLine

gorLine PROC	;Начать процедуру с именем gorLine
	call cursor	;Переместить курсор в заданные координаты
	mov CX, 28h	;Вывод по 40 символов
	mov AL, 07h	;Символ "залитая точка"
	call print	;Вывод символов
	ret	;Возврат из процедуры
gorLine ENDP	;Закончить процедуру с именем gorLine

Start:
	mov AX, @DATA	;Инициалищировать
	mov DS, AX	;сегментный регистр DS
;----------------------Установка режима экрана-----------------------
	mov AH, 00h	;Выбор функции задания режима экрана
	mov AL, 03h	;режим видеоадаптере 80x25, 16 цветов
	int 10h	;вызов функции BIOS
;--------------------------Рисование рамки---------------------------
	mov BH, 00h	;Используем страницу видопамяти 0
	mov BL, 0Fh	;Ярко белым по чёрному
;------------------Вывод вертикальных границ рамки-------------------
	mov DH, 5	;начиная со строки 5
	mov DL, 40	;столбца 40
	call vertLine	;вывести первую вертикальную линию
	mov DH, 5	;и начиная со строки 5
	mov DL, 79	;столбца 79
	call vertLine	;вывести вторую вертикальную линию
;-----------------Вывод горизонтальных границ рамки------------------
	mov DH, 5	;начиная со строки 5
	mov DL, 40	;столбца 40
	call gorLine	;вывести первую горизонтальную линию
	mov DH, 19	;и начиная со строки 19
	mov DL, 40	;столбца 40
	call gorLine	;вывести вторую горизонтальную линию
;----------------------------Вывод звезды----------------------------
	mov BH, 00h	;Используем страницу видопамяти 0
	mov DH, 10	;Установить курсор на
	mov DL, 60	;строке 10
	call cursor	;столбец 60
	mov CX, 01h	;Вывод по одному символу
	mov AL, 0Fh	;Символ "солнышко"
	mov BL, 8Eh	;жёлтый на чёрном с миганием
	call print	;Вывод символа
;------------------------Вывод основания ёлки------------------------
	mov BH, 00h	;Используем страницу видопамяти 0
	mov AL, 2Ah	;Символ "звёздочка"
	mov CX, 03h	;Вывод символов по 3
	mov BL, 0Ah	;Ярко зелёный цвет на чёрном воне
	mov DH, 11	;Задать начальные координаты:
	mov DL, 59	;строка 11, столбец 59
M1:
	call cursor	;переместить курсор
	call print	;вывести символы
	inc DH	;Увеличить DH на единицу, для перехода к следующей строке
	dec DL	;Уменьшить DL на единицу, для перехода на символ назад
	add CX, 2	;Увеличить число выводимых символов на 2
	cmp CX, 7	;Сравнить CX с 7
	jle M1	;Если CX меньше или равен 7, перейти к метке M1
;----------------------Вывод нижней части ёлки-----------------------
	mov BH, 00h	;Используем страницу видопамяти 0
	mov DH, 14	;Задать начальные координаты:
	mov DL, 60	;строка 14, столбец 60
	call cursor	;Переместить курсор
	mov AL, 2Ah	;Символ "звёздочка"
	mov BL, 06h	;Коричневый цвет на чёрном фоне
	mov CX, 01h	;Вывод символов по одному
	call print	;Вывод символа
;---------------------------Первая строка----------------------------
	mov CH, 20	;Очистить и установить цвет
	mov BH, 00001100b	;фона - чёрный и символов - ярко красный
	call chgColor	;20-й строки
	mov BH, 00h	;Используем страницу видопамяти 0
	mov DH, 20	;Задать начальные координаты:
	mov DL, 58	;строка 20, столбец 58
	call cursor	;переместить курсор
	mov AH, 09h	;Вывести
	lea DX, s1	;строку s1
	int 21h	;с помощью DOS
;---------------------------Вторая строка----------------------------
	mov CH, 21	;Очистить и установить цвет
	mov BH, 00001010b	;фона - чёрный и символов - ярко зелёный
	call chgColor	;21-й строки
	mov BH, 00h	;Используем страницу видопамяти 0
	mov DH, 21	;Задать начальные координаты:
	mov DL, 59	;строка 21, столбец 59
	call cursor	;переместить курсор
	mov AH, 09h	;Вывести
	lea DX, s2	;строку s2
	int 21h	;с помощью DOS
;---------------------------Третья строка----------------------------
	mov CH, 22	;Очистить и установить цвет
	mov BH, 00001001b	;фона - чёрный и символов - ярко синий
	call chgColor	;22-й строки
	mov BH, 00h	;Используем страницу видопамяти 0
	mov DH, 22	;Задать начальные координаты:
	mov DL, 58	;строка 22, столбец 58
	call cursor	;переместить курсор
	mov AH, 09h	;Вывести
	lea DX, s3	;строку s3
	int 21h	;с помощью DOS
;-----------------------Завершение программы-------------------------
	mov AH, 00h	;пауза до
	int 16h	;нажатия клавиши
	mov AL, 0	;Завершить
	mov AH, 4Ch	;программу
	int 21h	;с помощью DOS
END Start	;Конец исходного модуля