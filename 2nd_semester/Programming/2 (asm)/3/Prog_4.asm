;Prog_4 - Арифметические оперции, вариант 5
Code SEGMENT			;Открыть сегмент кодов
ASSUME CS: Code, DS: Data, SS: Outstack	;Назначить сегментные регистры
Start:
	MOV AX, Data		;Инициализировать
	MOV DS, AX			;Сегментный регистр DS
	XOR AX, AX			;Очистить регистр AX
	MOV AL, A			;Записать значение перемнееной A в младший байт регистра AX
	MOV AH, 03h			;Записать значение 03h в старший байт регистра AX
	IMUL AH				;Записать в AX результат умножения значения в AL и в AH (AX := (AL) * (AH))
	ADD AX, 48			;Записать в AX результат сложения значения в AX и 48 (AX := (AX) + 48)
	MOV BX, AX			;Записать значение AX (48+3*A) в BX
	MOV AH, 0			;Записать в старший байт AX 00h
	MOV AL, B			;Записать в младший байт AX значение переменной B
	MOV CL, C			;Записать в младший байт CX значение переменной C
	IDIV CL				;Записать в AL результат деления значения в AX и в CL (AL := quot((AX)/(CL)))
	MOV CL, D			;Записать в младший байт CX значение переменной D
	IMUL CL				;Записать в AX результат умножения значения в AL и в CL (AX := (AL) * (CL))
	SUB BX, AX			;Записать в BX результат вычитания из значения в BX значения в AX (BX := (BX)-(AX))
	MOV X, BX			;Записать в переменную X значение BX
	MOV AX, 4C00h		;Завершить программу
	INT 21h				;с помощью DOS
Code ENDS				;Закрыть сегмент кодов

Data SEGMENT			;Открыть сегмент данных
	A DB 5Ah			;Инициализировать
	B DB 55h			;переменные A, B, C, D, X
	C DB 11h
	D DB 2
	X DW ?
Data ENDS				;Закрыть сегмент данных

Outstack SEGMENT Stack	;Открыть сегмент стека
	DB 100h DUP(?)		;Отвести под стек 256 байт
Outstack ENDS			;Закрыть сегмент стека

END Start				;Конец исходного модуля