# x = 0.0123 0.0151 0.0228 0.0519 0.2693 0.2522 0.3604 0.9888 0.7725 0.6756
# x = 0.7337 0.8315 0.1392 0.9376 0.9093 0.6826 0.5942 0.3073 0.4433 0.6514 0.4321 0.671 0.0241 0.058 0.3364
# x = 0.68 0.77 0.17 0.07 0.15 0.18 0.57 0.96 0.28 0.84 0.11 0.05 0.26 0.72 0.09 0.12 0.2 0.4 0.25 0.46 0.91 0.68 0.68 0.88 0.37 0.32 0.43 0.55 0.47 0.75 0.31 0.04 0.41 0.29 0.29 0.14 0.41 0.12 0.86 0.62 0.4 0.32 0.84 0.27 0.5 0.54 0.5 0.89 0.71 0.93 0.3 0.88 0.03 0.08 0.8 0.63 0.98 0.99 0.7 0.65 0.92 0.34 0.66 0.15 0.81 0.12 0.82 0.32 0.51 0.4 0.86 0.14 0.58 0.63 0.87 0.51 0.87 0.74 0.05 0.65 0.77 0.65 0.66 0.16 0.55 0.05 0.77 0.28 0.18 0.39 0.31 0.87 0.89 0.43 0.59 0.02 0.27 0.87 0.6 0.3

print('\nВведите значения xi:')
while True:
    x = input('>>> ')
    if list(set([True for i in x.split(' ') if i.replace('0.', '').isdigit()])) != [True]:
        print('Неверный ввод')
    else:
        break
x = [float(i) for i in x.split(' ')]

x.sort()
n = len(x)

def F(x):
    return x

K_n_p = n**0.5 * max([i/n - F(x[i-1]) for i in range(1, n+1)])
K_n_m = n**0.5 * max([F(x[i-1]) - (i - 1)/n for i in range(1, n+1)])

K_n = max(K_n_m, K_n_p)

print(f'Вариационный ряд:\n{x}')
print(f'n = {n}')
print(f'Статистика K_n^+: {round(K_n_p, 2)}')
print(f'Статистика K_n^-: {round(K_n_m, 2)}')
print(f'Критерий КС: {round(K_n, 2)}')

knut_column = {0: '1%', 1: '5%', 2: '25%', 3: '50%', 4: '75%', 5: '95%', 6: '99%'}
knut_table = {
    1: [0.01000, 0.05000, 0.2500, 0.5000, 0.7500, 0.9500, 0.9900],
    2: [0.01400, 0.06749, 0.2929, 0.5176, 0.7071, 1.0980, 1.2728],
    3: [0.01699, 0.07919, 0.3112, 0.5147, 0.7539, 1.1017, 1.3589],
    4: [0.01943, 0.08789, 0.3202, 0.5110, 0.7642, 1.1304, 1.3777],
    5: [0.02152, 0.09471, 0.3249, 0.5245, 0.7674, 1.1392, 1.4024],
    6: [0.02336, 0.1002, 0.3272, 0.5319, 0.7703, 1.1463, 1.4144],
    7: [0.02501, 0.1048, 0.3280, 0.5364, 0.7755, 1.1537, 1.4246],
    8: [0.02650, 0.1086, 0.3280, 0.5392, 0.7797, 1.1586, 1.4327],
    9: [0.02786, 0.1119, 0.3274, 0.5411, 0.7825, 1.1624, 1.4388],
    10: [0.02912, 0.1147, 0.3297, 0.5426, 0.7845, 1.1658, 1.4440],
    11: [0.03028, 0.1172, 0.3330, 0.5439, 0.7863, 1.1688, 1.4484],
    12: [0.03137, 0.1193, 0.3357, 0.5453, 0.7880, 1.1714, 1.4521],
    15: [0.03424, 0.1244, 0.3412, 0.5500, 0.7926, 1.1773, 1.4606],
    20: [0.03807, 0.1298, 0.3461, 0.5547, 0.7975, 1.1839, 1.4698],
    30: [0.04354, 0.1351, 0.3509, 0.5605, 0.8036, 1.1916, 1.4801]
}

if n in list(knut_table.keys()):
    row_knut = knut_table[n]
else:
    y = [0.07089, 0.1601, 0.3793, 0.5887, 0.5887, 0.8326, 1.2239, 1.5174]
    row_knut = [y_p - (1/6) * (n**(-0.5)) for y_p in y]
res = []
if K_n < row_knut[0]:
    res = ['0%', knut_column[0]]
    print(f'{round(K_n, 2)} < {row_knut[0]}')
for i in range(len(row_knut) - 1):
    if row_knut[i] < K_n and K_n < row_knut[i + 1]:
        print(f'{row_knut[i]} < {round(K_n, 2)} < {row_knut[i+1]}')
        res = [knut_column[i], knut_column[i + 1]]
if K_n > row_knut[6]:
    res = [knut_column[6], '100%']
    print(f'{row_knut[6]} < {round(K_n, 2)}')
print(res)
if res == ['0%', '1%'] or res == ['99%', '100%']:
    print('Значения недостаточно случайные')
if res == ['1%', '5%'] or res == ['95%', '99%']:
    print('Значения подозрительны')
if res == ['5%', '25%'] or res == ['75%', '95%']:
    print('Значения почти подозрительны')
if res == ['25%', '50%'] or res == ['50%', '75%']:
    print('Значения удовлетворительно случайные')