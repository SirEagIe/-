;Program_3 - Команды передачи данных, вариант 5
Code SEGMENT			;Открыть сегмент кодов
ASSUME CS: Code, DS: Data, SS: Outstack		;Назначить сегментные регистры
Start:
	mov AX, Data		;Инициализировать
	mov DS, AX			;сегментный регистр DS
	mov A, 15			;Инициализировать
	mov B, 1Ah			;переменные A, B, C, D
	mov C, 1Fh			;значениями 5-го
	mov D, 6			;варианта
	mov AL, A			;Записать в младший байт регистра AX значение переменной A
	mov AH, B			;Записать в старший байт регистра AX значение переменной B
	xchg AL, AH			;Обмен значений младшего и старшего байта регистра AX
	mov BX, 3E10h		;Записать в регистр BX шестнадцатеричное значение 3E10
	mov CX, BX			;Записать в регистр CX значение регистра BX
	push BX				;Положить в стек значение регистра BX
	push CX				;Положить в стек значение регистра CX
	push AX				;Положить в стек значение регистра AX
	lea SI, C			;Записать в регистр SI эффективный адрес переменной C
	mov AX, SI			;Записать значение регистра SI в регистр AX
	lea DI, D			;Записать в регистр DI эффективный адрес переменной D
	mov BX, DI			;Записать значение регистра DI в регистр BX
	pop AX				;Извлечение значения из стека в регистр AX
	pop CX				;Извлечение значения из стека в регистр CX
	pop BX				;Извлечение значения из стека в регистр BX
	mov BX, AX			;Записать в регистр BX значение регистра AX
	mov A, AL			;Записать в переменную A значение младшего байта регистра AX
	mov B, AH			;Записать в переменную B значение старшего байта регистра AX
	mov C, 0			;Записать в переменную C значение 0
	mov AX, 4C00h		;Завершить программу
	int 21h				;с помощью DOS
Code ENDS				;Закрыть сегмент кодов

Data SEGMENT			;Открыть сегмент данных
	A DB ?				;Зарезервировать мество
	B DB ?				;в памяти для
	C DB ?				;переменных
	D DB ?				;A, B, C, D
Data ENDS				;Закрыть сегмент данных

Outstack SEGMENT Stack	;Открыть сегмент стек
	DB 100h DUP(?)		;Отвести под стек 256 байт
Outstack ENDS			;Закрыть сегмент стек
END Start				;Конец исходного модуля